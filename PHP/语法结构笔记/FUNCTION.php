<?php 
	
1.  函数的定义
	1.函数是什么:
		函数（function）是一段完成指定任务的已命名代码块。函数可以遵照给它的一组值或参数完成特定的任务，并且可能返回一个值。在PHP中有两种函数：自定义函数与系统函数。
	2.函数的优越性：
		控制程序设计的复杂性
		提高软件的可靠性
		提高软件的开发效率
		提高软件的可维护性
		提高程序的重用性

2.  自定义函数


	1.格式
		function 函数名([参数列表])
		{
			code...  函数体
			[return 返回值;]
		}
	2.函数的调用
		函数名();
	3.函数名命名规则：
		由数字，字母，下划线组成，非数字开头。
	4.函数名不区分大小写
	5.函数不能重复定义
	6.参数
		1.形参：在声明时定义
			function 函数名([形参1,形参2，形参n])
			{

			}
		2.实参：调用时传递
			函数名(实参1，实参2,实参N);

	7.调用函数时注意
		1.实参与形参个数相等
		2.实参多于形参
		3.形参多于实参
		4.没有传递参数

	8.返回值
	    1.函数可以作为整体参加运算， 该整体的值 就是 该函数的返回值
		2.输出 函数调用， 输出函数的返回值
		3.所有的函数都有返回值， 默认 返回null
		4.函数代码中， 

	x.判断函数是否存在:function_exists()

3.  函数的工作原理和结构化编程

4.  PHP变量的作用域

	4.1 变量的范围
		1.当主程序调用函数时，PHP 会暂时停止目前主要程序流程的运行，并传递必要的运算参数给目标函数使用，以执行函数的程序码片段。
		2.在函数执行结束后，函数会回传执行结果所得的数值，并将执行流程转回原本主程序中断的地方，继续执行运作。

	4.2 变量的能见度
		1.所谓变量的能见度，意指变量在程序中的可作用范围。当一个变量执行赋值动作后，会随着声明局部的差异，而有不同的作用范围。大致上来说变量会依据声明的局部分为下列两种：局部变量和全局变量

	4.3 局部变量（内部变量）
		在函数之中声明的变量就是局部变量，并且该变量只有在函数范围之中才能加以使用。如果其它程序局部需要调用使用该变量值时，必须透过「return」指令，来将其传回至主程序区块以作后续处理。

	4.4 全局变量 
		1.在函数范围之外所声明的变量就是全局变量。由于函数可以视为单独的程序片段，所以局部变量会复盖全局变量的能见度，因此在函数中并无法直接调用使用全局变量。
		2.函数中若要使用全局变量时，必须要利用global关键字定义目标变量，以告诉函数主体此变量为全局。
			
		       $A=“Hello !!”;         //定义全局变量
			    function print_A() {     //定义函数 print_A()		
				global $A;            //利用 global 关键字声明变量 A 为全局变量
			           echo $A;
			    }
		        print_A();
		  
		3. 也可以使用预定义的全局变量数组$GLOBALS.这是一个特殊变量在程序运行时自动创建。格式：echo $GLOBALS[“A”];

		4. 注意事项
			1.在函数中声明全局变量时，其名字要与全局变量一致
			2.通过unset($var)可以手动删除变量，变量会在内存中被释放，也就不在全局作用域中了。
			3.使用require与include包含不会影响作用域
			4.通过参数列表传递给函数的变量，对于函数来说是局部变量，除非在传递时带有&引用符号

	4.5 静态变量
	    PHP支持声明函数变量为静态的(static)。一个静态变量在所有对该函数的调用之间共享，并且仅在脚本的执行期间函数第一次被调用时被初始化。要声明函数变量为静态的用关键字static。通常，静态变量的第一次使用时赋予一个初始值。


5.  声明及应用各种形式的PHP函数
	无论是使用系统函数还是自定义的函数，我们都要可通过如下函数的三要素来了解一个函数：
		函数的功能描述
		函数的参数
		函数的返回值

	5.1  常规参数的函数
		1.常规参数的函数格式说明：浮点型：double
	  		string example(string name,int age,double height) 
		2.所谓的常规参数的函数，就是实参和形参应该个数相等、类型一致。就像C或Java等强类型型语言。
			上面函数有三个参数，调用时传递的参数个数和顺序必须一致。
			string chr(int $ascii)   //返回指定的字符
			float ceil(float $value) //进一法取整
			array array_combine(array $keys,array $values)//合并一个数组
			string implode(string $glue,array $pieces)

	5.2 伪类型参数的函数  mixed:多类型
		1.伪类型参数的函数格式说明：
			  mixed funName(mixed $a, number $b, callback $c) 
		2.PHP是弱类型语言，不仅在声明变量时不需要指定类型，当然在声明函数时也不需要指定类型，所以在PHP中函数的每个参数，都可以为其传递任意类型的值。
			三种伪类型： mixed、number 和 callback:回调类型。
			bool empty(mixed $var)    //检查一个变量是否为空
			bool usort(array &$array,callback $cmp_function)
					//使用用户自定义的比较函数对数组中的值进行排序
			number abs(mixed $number)  //绝对值


	5.3  引用参数的函数
		1.引用参数的函数格式说明：
			  void funName(array &args) 
		2.相对于按值传递模式，并不会将父程序中的指定数值或目标变量传递给函数，而是把该数值或变量的内存储存区块相对地址导入函数之中。因此当该数值在函数中有任何变动时，会连带对父程序造成影响。

		3.注意：如果在函数的形参中使用“&“修饰的参数，在调用该函数时必须传入一个变量给这个参数，而是不能传递一个值。
			
			$a = 1;
			function demo(&$a)
		    {
		        
		        $a = 10;
		        echo $a;

		    }

		    demo($a); 
		    echo $a;

	5.4  默认参数的函数
		1.默认参数(“[ ]”中的)的函数格式说明： 
		 	mixed funName(string name [,string value [,int  num]]) 
		2.在php中，支持函数的默认方式调用。如果在调用函数时没有指定参数的值，在函数中会使用参数的默认值。 
		3.注意：默认参数必须列在所有没有默认值参数的后面。

	5.5  可变个数参数的函数
		1.可变个数参数的函数格式说明：
	 		mixed funName(string arg1 [,string ...] ) 
		2.通常用户定义函数时，设置的参数数量是有限的。如果希望函数可以接受任意数量的参数，需使用以下函数：
			func_get_args()  //返回一个数组，包含传进来的所有参数
			func_num_args()  //返回参数总数 
			func_get_arg()    //接收一个数字参数，返回指定参数

	5.6  回调函数
		1.回调函数格式说明：
			mixed funName(callback arg) 
		2.所谓回调函数，就是指调用函数时并不是传递一个标准的变量作为参数，而是将另一函数作为参数传递到调用的函数中。
			1.变量函数
				把函数名 以字符串的形式 赋值给一个变量
			2.使用变量函数声明和应用的回调函数
			3.借助call_user_func_array()函数自定义回调函数
			4.类静态函数和对象的方法回调

	5.6.2 使用变量函数声明和应用的回调函数
	    // 声明回调函数filter, 在0-100的整数中通过自定义条件过滤不要的数字
	    function filter( $fun ) {
	        for($i=0; $i <= 100; $i++) {
	            //将参数变量$fun加上一个圆插号$fun(), 则为调用和变量$fun值同名的函数
	            if( $fun($i) ) 
	                 continue;   
	            echo $i.'<br>'; 
	        }
	    }
	   //声明一个函数one, 如果参数是3的倍数就返回true, 否则返回false
	   function one($num) {
	        return $num%3 == 0;
	    }


	    变量函数：$a = 'one'; $a 就是变量函数；

6.匿名函数 
	匿名函数（Anonymous functions），也叫闭包函数（closures），允许 临时创建一个没有指定名称的函数。最经常用作回调函数（callback）参数的值。当然，也有其它应用的情况。
	注意： 只在PHP5.3以上有效

7.递归函数
	1.所谓的函数递归调用，就是函数可以在其声明的执行叙述之中调用执行自己。
	2.通常在此类型的函数之中会附加一个条件判断叙述，以判断是否需要执行递归调用，并且在特定条件下终止函数的递归调用动作，把目前流程的主控权交回上一层函数执行。因此当某个执行递归调用的函数，没有附加条件判断叙述时可能会造成无限循环的错误情形.
	3.函数递归调用最大的好处在于可以精简程序中繁杂重复调用程序，并且能以这种特性来执行一些较为复杂的运算动作。

8.使用自定义函数库
	1.代码重用 通过重复使用已有的代码，提高开发效率，降低成本
	
	2.include( )和require( ) 函数。
		作用：将一个文件在预处理期间被导入，像把该文件粘贴到使用函数的地方。
		几乎等价，区别在于如果导入的文件不存在的
		require报解析错误，终止程序执行;  
		include 报警告错误，不影响程序执行
	3.include_once( )和require_once(  )
		导入 文件 到 本文件中
		require_once和include_once 只能导入一次文件
		区别 同require和include的区别


