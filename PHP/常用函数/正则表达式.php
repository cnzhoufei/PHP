匹配范围		
\d	匹配任意一个十进制数字	[0-9]
\D	匹配除十进制数字以外的任意数字	[^0-9]
\s	匹配空白字符	[\n\f\r\t\v]
\S	匹配除空白字符以外的任意一个字符	[^\n\f\r\t\v]
\w	匹配任意一个数字、字母和下划线	[0-9a-zA-Z_]
\W	匹配除字母、数字和下划线以外的任意字符	[^0-9a-zA-Z_]
[]	1)用来表示范围。  2)匹配任意一个中括号中定义的原子	
[^]	中括号里面的^(抑扬符)：表示匹配任意一个除中括号里面定义的原子	
限定次数		
*	匹配0次、1次或多次其前的原子	{0,}
+	匹配1次或多次其前的原子	{1,}  
?	匹配0次或1次其前的原子	{0,1}
{n}	表示其前的原子正好出现n次	
{n,}	表示其前的原子至少出现n次，最多不限制	
{m,n}	表示其前的原子最少出现m次，最多出现n次	
其它		
.	匹配除换行符(\n)以外的任意字符【windows下还匹配\f\r】	
|	两个或多个分支选择【优先级最低】	
^	匹配输入字符的开始位置	
$	匹配输入字符的结束位置	
\b	匹配词边界	
\B	匹配非词边界	
()	1)模式单元，把多个小原子组成一个大原子。2)可以改变优先级	



            //正则替换
            $pat = '/\{(.*?)\}/';
            $des = '<?php echo $1; ?>';
            $newStr = preg_replace($pat, $des, $str);