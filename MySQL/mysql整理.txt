4.7 忘记root 密码
		① 关闭mysql服务
		② 使用安全模式 打开mysql服务  mysqld --skip-grant-tables (不要加分号)
		③ 使用root用户不用密码登陆   mysql -u root
		④ 登陆后 进入mysql数据库		use mysql;
		⑤ 更改root密码						
			update user set Password=password('新密码') where User='root';
		⑥ 更新权限			flush privileges;
		⑦ 退出mysql安全模式   mysqladmin -u root -p shutdown
			要求输入刚刚设置的新密码
		⑧ 重新开启mysql服务

		只能在本地机器执行


创建新用户并授权

		GRANT 权限 ON 数据库.数据表 TO 用户名@登录主机 IDENTIFIED BY “密码”

		如：
		1. grant SELECT,INSERT,UPDATE,DELETE ON *.* TO lisi@"%" IDENTIFIED BY "123"

		2. grant all ON *.* TO lisi@"%" IDENTIFIED BY "123"

			1. all 代表所有权限 
			2. *.* 代表所有库 所有表
			3. 使用 grant 创建用户，如果用户不存在，则创建 ，如果用户存在，则更改信息

删除指定的普通用户 delete from user where User='用户名';
新建一个数据库：   create database 数据库名;
查看当前库select database();
删掉数据库drop database 数据库名;
显示引擎show engines;	

创建表create table if not exists `user`(
			`id` int unsigned not null auto_increment primary key,
			`pass` char(32) not null,
			`email` varchar(255) not null,
			`tel` char(11) not null,
			`address` varchar(255) not null,
			`addtime` int not null
		)engine=InnoDB default charset=utf8;



1.数据库的备份:
mysqldump -u 用户 -p 库 表 > 位置	
如：
mysqldump -u root -p vip goods > c:/vip_goods.sql
mysqldump -u 用户 -p 库 > 位置
如：
mysqldump -u root -p vip > c:/vip.sql
		2.数据库的还原:
			mysql -u root -p
			use 库()
			source 源





	--添加一条数据
	mysql> insert into demo(name,age,sex) values('zhangsan',20,'w');
	Query OK, 1 row affected (0.00 sec)
	
	mysql> insert into demo values('lisi',22,'m'); --不指定字段名来添加数据
	Query OK, 1 row affected (0.00 sec)
	
	mysql> insert into demo(name,age) values('wangwu',23); --指定部分字段名来添加数据
	Query OK, 1 row affected (0.00 sec)
	
	--批量添加数据
	mysql> insert into demo(name,age,sex) values('aaa',21,'w'),("bbb",22,'m');
	Query OK, 2 rows affected (0.00 sec)
	Records: 2  Duplicates: 0  Warnings: 0
	
	mysql> select * from demo; --查询数据
	
	mysql> update demo set age=24 where name='aaa';  --修改
	Query OK, 1 row affected (0.02 sec)
	Rows matched: 1  Changed: 1  Warnings: 0
		
	mysql> delete from demo where name='bbb';  --删除
	Query OK, 1 row affected (0.00 sec)
	
	 
		