

-------------------------js代码-------------------------------
//把所以异步加载写到一个滚动事件里  写到底部
$(window).scroll(function(){

    var height = window.innerHeight;//获取浏览器的可视高度
    var sTop = $(window).scrollTop();//获取滚动条离顶部的高度
   
    
    var mTop = $('.brands_list')[0].offsetTop;//当前元素离浏览器顶部的高度
    var result = mTop - sTop;//当前元素离html顶部的高度 减去 滚动条离顶部的高度 等于当前元素离浏览器顶部的高度



		
    //首页要给异步加载过来存放位置的父标签加上一个属性并赋值 用来做判断(我加上了一个judge="1"的属性)
    //判断 当前元素离浏览器顶部的高度 有没有小于浏览器的可视高度 并且  judge这个属性的值还没有被改变过(没有被改变过 证明还没有加载过  主要防止滚动事件连续触发)  如果条件成立  开始加载
    if(result < height && $("#.brands_list").attr('judge') == 1){

        $(".brands_list").attr('judge',2);//改变judge的值  用来判断不让它重复加载   

          //这里开始加载   加载回来的数据会直接替换选择元素里的text
          $(".brands_list").load("{{:U('Index/brand')}}", {limit: 25}, function(){
           
         });

      
    }
 )}



 			<!-------------------------- html代码  ---------------------->
          <ul class="brands_list" judge='1'>
          //这个标签内用来存放  加载过来的类容
          //还没加载过来之前显示这个img标签(正在加载的动态图片)
          <img src="__PUBLIC__/style/images/jz.gif" style="width:100px;margin-left:300px;margin-top:100px" id="brands_img" >
          </ul>



 			<!-------------------------- php代码  ---------------------->

 			 public function brand()
		    {
		        $arr = M('brand');
		        $brand = $arr->where("is_show=1")->limit(0,20)->select();
		        foreach($brand as $v){
		            $res .= "<li><a href=".U('Search/search',array('keyword'=>$v['brand_name'])).">
		            <img src=".__ROOT__."/Uploads/{$v['brand_logo']}"." width='149' height='79' ></a></li>";
		        }
		        echo $res."<br class='clear'>";//这里输出的代码 都会被jq中的load这个方法获取到
		    }
